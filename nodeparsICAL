const fs=require('fs');

// BEGIN:VEVENT
// SUMMARY:Access-A-Ride Pickup
// DTSTART;TZID=America/New_York:20130802T103400
// DTEND;TZID=America/New_York:20130802T110400
// LOCATION:1000 Broadway Ave.\, Brooklyn
// DESCRIPTION: Access-A-Ride to 900 Jay St.\, Brooklyn
// STATUS:CONFIRMED
// SEQUENCE:3
// BEGIN:VALARM
// TRIGGER:-PT10M
// DESCRIPTION:Pickup Reminder
// ACTION:DISPLAY
// END:VALARM
// END:VEVENT


let contents=fs.readFileSync("icalExample.ics","utf8");

function getVEVENTSFromICS(contents){
    contents.replace(/(\r\n|\r|\n)/g,"\\\n");
    contents=contents.trim();
    lines=contents.split("\n");
    let events=[];
    let str="";
    let inside=false;
    for (let i=0;i<lines.length;i++){
        if (inside===true){
            if (lines[i].slice(0,10)==="END:VEVENT"){
                inside=false;
                events.push(str);
                str="";
            }
            else{
                str+=lines[i]+="\n";
            }
        }
        if ((lines[i].slice(0,12))==="BEGIN:VEVENT"){
            inside=true;
        }
    }
    return events;
}

function parseVEVENTToObject(vEvent){
    let row={}
    //Just in case
    // vEvent.replace(/(\r\n|\r|\n)/g,"\\\n");
    // vEvent=contents.trim();
    let lines=vEvent.split("\n");
    row["Subject"]="";
    row["Description"]="";
    row["UID"]="";
    row["Start Date"]="";
    row["Start Time"]="";
    row["End Date"]="";
    row["End Time"]="";
    let extraStuff="\n-------Extra Stuff-------\n";
    for (let i=0;i<lines.length;i++){
        let line=lines[i]
        if (line.slice(0,7)==="SUMMARY"){
            row["Subject"]=line.split(":")[1];
        }
        else if (line.slice(0,11)==="DESCRIPTION"){
            row["Description"]=line.split(":")[1];
        }
        else if (line.slice(0,3)==="UID"){
            row["UID"]=line.split(":")[1];
        }
        else if (line.slice(0,7)==="DTSTART"){
            let iCalStartDate=line.split(":")[1];
            let ISOString=iCalDateToISOString(iCalStartDate);
            let startDateObject=new Date(ISOString);
            let year=startDateObject.getFullYear().toString();
            let month=("0"+((startDateObject.getMonth()+1).toString())).slice(-2);
            let date=("0"+(startDateObject.getDate().toString())).slice(-2);
            let hours=("0"+((startDateObject.getHours()+1).toString())).slice(-2);
            let minutes=("0"+(startDateObject.getMinutes().toString())).slice(-2);
            let seconds=("0"+(startDateObject.getSeconds().toString())).slice(-2);
            row["Start Date"]=year+"-"+month+"-"+date;
            row["Start Time"]=hours+":"+minutes+":"+seconds;
        }
        else if (line.slice(0,7)==="DTEND"){
            let iCalEndDate=line.split(":")[1];
            let ISOString=iCalDateToISOString(iCalEndDate);
            let endDateObject=new Date(ISOString);
            let year=endDateObject.getFullYear().toString();
            let month=("0"+((endDateObject.getMonth()+1).toString())).slice(-2);
            let date=("0"+(endDateObject.getDate().toString())).slice(-2);
            let hours=("0"+((endDateObject.getHours()+1).toString())).slice(-2);
            let minutes=("0"+(endDateObject.getMinutes().toString())).slice(-2);
            let seconds=("0"+(endDateObject.getSeconds().toString())).slice(-2);
            row["End Date"]=year+"-"+month+"-"+date;
            row["End Time"]=hours+":"+minutes+":"+seconds;
        }
        else{
            extraStuff+=line+"\n";
        }
    }

    row["Description"]+=extraStuff;
    // need SUMMARY
    // need DTSTART
    // need DTEND
    // need DESCRIPTION
    // need UID
    return row;
}

function iCalDateToISOString(icalDate){
    // 2023-06-11T14:05:25.003Z----->20230611T140525Z
    let year=icalDate.slice(0,4);
    let month=parseInt(icalDate.slice(4,6));
    let day=icalDate.slice(6,8);
    let dateObject;
    if (icalDate.indexOf("T")!==-1){//Long String
        hour=icalDate.slice(9,11);
        min=icalDate.slice(11,13);
        sec=icalDate.slice(13,15);
        dateObject= new Date(year,month,day,hour,min,sec);
    }
    else{
        dateObject=new Date(year, month, day);
    }

    return dateObject.toISOString();
}

let events=getVEVENTSFromICS(contents);
for (let i=0;i<events.length; i++){
    console.log(parseVEVENTToObject(events[i]));
}


